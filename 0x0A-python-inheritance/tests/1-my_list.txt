Using the "1-my_list" Module
============================

Using "MyList"
--------------

Importing the function from the module:
    >>> MyList = __import__("1-my_list").MyList

Testing for Module Docstring:
    >>> module_docstring = __import__("1-my_list").__doc__
    >>> len(module_docstring) > 1
    True

Testing for Class Docstring:
    >>> class_docstring = __import__("1-my_list").MyList.__doc__
    >>> len(class_docstring) > 1
    True

Testing for Method Docstring:
	>>> method_docstring = __import__("1-my_list").MyList.print_sorted.__doc__
	>>> len(method_docstring) > 1
	True

Testing MyList Inheritance:
	>>> is_subclass = issubclass(MyList, list)
	True

Testing for an Empty List:
	>>> empty_list = MyList()
	>>> empty_list.print_sorted()
	[]

Testing if Appending Works:
	>>> appended_list = MyList()
	>>> appended_list.append(1)
	>>> appended_list.append(2)
	>>> appended_list.append(3)
	>>> print(appended_list)
	[1, 2, 3]

Testing for a List Already in Correct Order:
	>>> appended_list.print_sorted()
	[1, 2, 3]

Testing for a Reversed Order List:
	>>> reversed_list = MyList()
	>>> reversed_list.append(3)
	>>> reversed_list.append(2)
	>>> reversed_list.append(1)
	>>> print(reversed_list)
	[3, 2, 1]
	>>> reversed_list.print_sorted()
	[1, 2, 3]
	>>> print(reversed_list)
	[3, 2, 1]
