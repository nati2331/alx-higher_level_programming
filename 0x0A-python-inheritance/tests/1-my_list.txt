# Module: `1-my_list`
============================

This module introduces a specialized subclass of `int` known as `MyList`, featuring a singular method: `print_sorted`.

## Utilizing `print_sorted`

### Initial Import
To employ `MyList`, initiate the import of `MyList` from the module `1-my_list`. Due to the presence of a numeral in the filename, the conventional `from 1-my_list import MyList` syntax is invalid. Instead, use the following syntax:

```python
>>> MyList = __import__('1-my_list').MyList

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]

>>> my_list.print_sorted()
[1, 2, 3, 4, 5]

>>> print(my_list)
[1, 4, 2, 3, 5]

>>> my_list = MyList()
>>> my_list.print_sorted()
[]

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.print_sorted()
[1]

>>> my_list = MyList()
>>> my_list.append(0.1)
>>> my_list.append(4.2)
>>> my_list.append(2.6)
>>> my_list.append(7.3)
>>> my_list.append(5.0)
>>> print(my_list)
[0.1, 4.2, 2.6, 7.3, 5.0]

>>> my_list.print_sorted()
[0.1, 2.6, 4.2, 5.0, 7.3]

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4.2)
>>> my_list.append(2.6)
>>> my_list.append(7.3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4.2, 2.6, 7.3, 5]

>>> my_list.print_sorted()
[1, 2.6, 4.2, 5, 7.3]

>>> my_list = MyList()
>>> pos_inf = float('inf')
>>> my_list.append(pos_inf)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(7)
>>> my_list.append(5)
>>> print(my_list)
[inf, 4, 2, 7, 5]

>>> my_list.print_sorted()
[2, 4, 5, 7, inf]

>>> my_list = MyList()
>>> neg_inf = float('-inf')
>>> my_list.append(neg_inf)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(7)
>>> my_list.append(5)
>>> print(my_list)
[-inf, 4, 2, 7, 5]

>>> my_list.print_sorted()
[-inf, 2, 4, 5, 7]

>>> my_list = MyList()
>>> not_a_num = float('nan')
>>> my_list.append(not_a_num)
>>> my_list.append(4)
>>> my_list.append(neg_inf)
>>> my_list.append(-7)
>>> my_list.append(pos_inf)
>>> print(my_list)
[nan, 4, -inf, -7, inf]

>>> my_list.print_sorted()
[nan, -inf, -7, 4, inf]

>>> my_list.print_sorted(1)
Traceback (most recent call last):
    ...
TypeError: print_sorted() takes 1 positional argument but 2 were given

>>> my_list.print_sorted([1, 4, 2, 3, 5])
Traceback (most recent call last):
    ...
TypeError: print_sorted() takes 1 positional argument but 2 were given

>>> my_list = MyList()
>>> my_list.append(None)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(7)
>>> my_list.append(5)
>>> print(my_list)
[None, 4, 2, 7, 5]

>>> my_list.print_sorted()
Traceback (most recent call last):
    ...
TypeError: unorderable types: int() < NoneType()

>>> my_list = MyList()
>>> my_list.append('1')
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(7)
>>> my_list.append(5)
>>> print(my_list)
['1', 4,
